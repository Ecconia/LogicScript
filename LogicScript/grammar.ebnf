case = "when", ws, expression, [ ws ], nl, { statement };

statement = [ ws ], set_output;
set_output = output, ws, "=", ws, expression;

output = "out", [ "[", number_dec, "]" ];
input = "in", "[", number_dec, "]";

expression = bits_value
	| operator, "(", { expression, ",", ws }, ")";

bits_value = number
	| "(", { bit_value, ",", ws }, ")"

bit_value = bit | input;

bit = "0" | "1";
digit = "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9";
number_dec = { digit };
number_bin = { bit };
number = ( "'", number_dec ) | number_bin;

ws = one_ws, { one_ws };
one_ws = " " | "\t";
nl = "\n", { "\n" };